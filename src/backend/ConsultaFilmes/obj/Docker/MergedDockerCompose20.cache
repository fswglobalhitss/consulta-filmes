name: dockercompose6307847385881424936
services:
  app_db:
    container_name: app_db
    environment:
      POSTGRES_DB: SampleDriverDb
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      dev: null
    ports:
    - mode: ingress
      target: 5432
      published: "5433"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: app_data
      target: /var/lib/postgresql/data
      volume: {}
  consultafilmes.api:
    build:
      context: C:\Users\pe_va\Desktop\Estudo\consulta-filmes\src\backend\ConsultaFilmes
      dockerfile: ConsultaFilmes.API/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: ConsultaFilmes.API
      target: base
    container_name: appdemo-service
    depends_on:
      app_db:
        condition: service_started
    entrypoint:
    - dotnet
    - --roll-forward
    - Major
    - /VSTools/DistrolessHelper/DistrolessHelper.dll
    - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__DefaultConnection: User ID =postgres;Password=postgres;Server=app_db;Port=5432;Database=SampleDriverDb;
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: consultafilmesapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net8.0/ConsultaFilmes.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major
        /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      dev: null
    ports:
    - mode: ingress
      target: 80
      published: "5009"
      protocol: tcp
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\pe_va\.nuget\packages
      target: /.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
      target: /HotReloadAgent
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net8.0
      target: /VSTools
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\pe_va\Desktop\Estudo\consulta-filmes\src\backend\ConsultaFilmes\ConsultaFilmes.API
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\pe_va\AppData\Roaming\ASP.NET\Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\pe_va\AppData\Roaming\Microsoft\UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\pe_va\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\pe_va\AppData\Roaming\ASP.NET\Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\pe_va\AppData\Roaming\Microsoft\UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\pe_va\Desktop\Estudo\consulta-filmes\src\backend\ConsultaFilmes
      target: /src
      bind:
        create_host_path: true
  my-angular-app:
    build:
      context: C:\Users\pe_va\Desktop\Estudo\consulta-filmes\src\frontend\front.Dockerfile
      dockerfile: ../../frontend/front.Dockerfile
    container_name: appdemo-front
    depends_on:
      consultafilmes.api:
        condition: service_started
    image: myangularapp
    networks:
      front: null
    ports:
    - mode: ingress
      target: 80
      published: "5010"
      protocol: tcp
networks:
  dev:
    name: dockercompose6307847385881424936_dev
    driver: bridge
  front:
    name: dockercompose6307847385881424936_front
    driver: bridge
volumes:
  app_data:
    name: dockercompose6307847385881424936_app_data